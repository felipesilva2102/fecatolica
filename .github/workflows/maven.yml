name: Java CI

on: 
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Java ${{ matrix.java }}
    strategy:
      matrix:
        java: [17,21]

    steps:
      - uses: actions/checkout@v5.0.0

      - name: Set up JDK ${{ matrix.java }}
        if: ${{ matrix.java == 17 }}
        uses: actions/setup-java@v5.0.0
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Set up GraalVM ${{ matrix.java }} 
        if: ${{ matrix.java == 21 }}
        uses: graalvm/setup-graalvm@v1.4.1
        with:
          java-version: '21'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Cache local Maven repository
        uses: actions/cache@v4.3.0
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - uses: browser-actions/setup-firefox@v1.7.0
      - uses: browser-actions/setup-chrome@v2.1.0

      - name: Validate
        run: ./mvnw -B clean validate

      - name: Static Validation
        run: ./mvnw -B -Pcheck-duplicate,check-checkstyle,check-cycles,check-cpd,check-pmd,check-spotbugs -DskipTests=true -Dmaven.compiler.source=${{ matrix.java }} -Dmaven.compiler.target=${{ matrix.java }} -DnvdApiKey=${{ secrets.NVDAPIKEY }} install
        #run: ./mvnw -B -Pcheck-duplicate,check-checkstyle,check-cycles,check-cpd,check-pmd,check-spotbugs,check-dependency -DskipTests=true -Dmaven.compiler.source=${{ matrix.java }} -Dmaven.compiler.target=${{ matrix.java }} -DnvdApiKey=${{ secrets.NVDAPIKEY }} install

      - name: Tests
        run: ./mvnw -B -DwebDriverType=chrome verify

      - name: Build Native Image
        if: ${{ matrix.java == 21 }}
        run: ./mvnw -B -Pnative -DskipTests=true spring-boot:build-image

      - uses: codecov/codecov-action@v5.5.1
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ matrix.java == 17 && github.event_name == 'push' && github.ref_name == '5.4.x' && github.repository_owner == 'joinfaces' }}

      - name: Sonarqube
        env:
          # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ matrix.java == 17 && github.event_name == 'push' && github.ref_name == '5.4.x' && github.repository_owner == 'joinfaces' }}
        run: ./mvnw -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Pcheck-sonarqube sonar:sonar
